.input replicas `repeat_iter(peers.clone()) -> map(|p| (p,))`
.input numReplicas `repeat_iter([(num_replicas,),])`

.async toReplica `map(|(node_id, v)| (node_id, serialize_to_bytes(v))) -> dest_sink(to_replica_sink)` `null::<(u32,)>()`
.async fromReplica `null::<(u32,u32,)>()` `source_stream(from_replica_source) -> map(|v| deserialize_from_bytes::<(u32,u32,)>(v.unwrap()).unwrap())`

toReplica@addr(v) :~ clientIn(v), replicas(addr)
acks(i, v) :- fromReplica(i, v)
acks(i, v) :+ acks(i, v), !committed(v)
numAcks(count(i), v) :- acks(i, v)
committed(v) :- numAcks(num, v), numReplicas(n)